
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author PJ
 */
public class MoviesListFrame extends javax.swing.JPanel {

    /**
     * Creates new form ListAllMovies
     */
    public MoviesListFrame() {
        initComponents();
        
        getTableContents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listMovies = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 102, 102));
        setMinimumSize(new java.awt.Dimension(740, 450));

        listMovies.setBackground(new java.awt.Color(255, 255, 51));
        listMovies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DVD Number", "DVD Title", "Category", "New Release", "Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(listMovies);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private static DefaultTableModel model;
    
public void getTableContents(){
    
       ClientMainMenu clientMoviesView = new ClientMainMenu(); 
       ArrayList<DVD> dvdList = new ArrayList<DVD>(clientMoviesView.dvdTable());
       //sorts the ArrayList in alphabetical order
       Collections.sort(dvdList, new Comparator<DVD>()
       {
         @Override
           public int compare(DVD t, DVD t1)
           {
               return t.getCategory().compareTo(t1.getCategory()); 
           }
       });
       
       //populates the table from the arrayList
        model = (DefaultTableModel) listMovies.getModel();
        model.setRowCount(0);
        for(int a = 0; a < dvdList.size(); a++)
        {
            model.addRow(new Object[]{dvdList.get(a).getDvdNumber(), dvdList.get(a).getTitle(), dvdList.get(a).getCategory(), dvdList.get(a).isNewRelease(),dvdList.get(a).isAvailable()});
        }
}
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listMovies;
    // End of variables declaration//GEN-END:variables
}
