
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author stean
 */
public class RentalsMainFrame extends javax.swing.JPanel {

    /**
     * Creates new form Reports
     */
    public RentalsMainFrame() {
        initComponents();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        allRentals = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 102, 102));
        setMinimumSize(new java.awt.Dimension(850, 500));
        setPreferredSize(new java.awt.Dimension(850, 500));

        allRentals.setBackground(new java.awt.Color(255, 255, 51));
        allRentals.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rental Number", "Date Rented", "Date Returned", "Customer Number", "DVD Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(allRentals);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save report.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("All Rentals Report");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(338, 338, 338)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(jLabel1)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String filePath; 
        
        Date date1 = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH-mm-ss") ;
        
        String date = dateFormat.format(date1); 
        String fileName = "\\" + "(All Rentals for)" + date + ".txt"; 
        
        
        JFileChooser fChooser = new JFileChooser();
        
        fChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fChooser.showSaveDialog(this); 
        
        try
        {
            filePath = fChooser.getSelectedFile().getCanonicalPath(); 

            FileWriter fw = new FileWriter(filePath + fileName);
            
            bw = new BufferedWriter(fw);
            
            bw.write(String.format("%-20s", "Rantal Number") + String.format("%-20s", "Date Rented") + String.format("%-20s", "Date Returned") + String.format("%-20s", "Customer Number") + String.format("%-20s", "Customer Name") + String.format("%-20s", "DVD Number"));
            bw.newLine();
            
            bw.write("_________________________________________________________________________");
            
            bw.newLine();
            
            for(int cnt = 0; cnt<allRentals.getRowCount(); cnt++)
            {
                bw.newLine();
                for(int cnt1 = 0; cnt1<5; cnt1++)
                {
                    String rentalsData = String.format("%-20s", allRentals.getValueAt(cnt, cnt1).toString()); 
                    bw.write(rentalsData);
                }    
            }
            bw.close();
        }
        catch(IOException e)
        {
            JOptionPane.showMessageDialog(null, "IOException");
        }
        catch(NullPointerException e)
        {
            JOptionPane.showMessageDialog(null, "NullPointerException");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allRentals;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
     private static DefaultTableModel model;
     private static Date date1, date2; 
     private static DateFormat dateFormat = new SimpleDateFormat("yyyy/mm/dd"); 
     private static BufferedWriter bw; 
     public void populateTable()
     {
        ClientMainMenu view = new ClientMainMenu(); 
        ArrayList<Rental> rentals = new ArrayList<Rental>(view.rentals(""));
       
        Collections.sort(rentals, new Comparator<Rental>()
        {
        @Override        
                public int compare(Rental t, Rental t1) 
                {  
                    return t1.getDateRented().compareTo(t.getDateRented());  
                } 
        });
      
           
          
         
      
      
       //populates the table from the arrayList
        model = (DefaultTableModel) allRentals.getModel();
        model.setRowCount(0);
        for(int a = 0; a<rentals.size(); a++)
        {
            model.addRow(new Object[]{rentals.get(a).getRentalNumber(), rentals.get(a).getDateRented(), rentals.get(a).getDateReturned(), rentals.get(a).getCusNumber(), rentals.get(a).dvdNumber()});
        }

                

     }

} 
